#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Sun Sep 25 13:43:28 2016

import wx

# begin wxGlade: extracode
# end wxGlade



class OptionsWindow(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: OptionsWindow.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer_10_staticbox = wx.StaticBox(self, -1, "Authentication")
        self.sizer_9_staticbox = wx.StaticBox(self, -1, "Options")
        self.label_5 = wx.StaticText(self, -1, "Poll Interval (seconds)")
        self.text_poll_interval = wx.TextCtrl(self, -1, "")
        self.radio_btn_auth_web = wx.RadioButton(self, -1, "Twitch Web Login", style=wx.RB_GROUP)
        self.radio_btn_auth_none = wx.RadioButton(self, -1, "None - use public follows for a user")
        self.label_8 = wx.StaticText(self, -1, "Username")
        self.text_username = wx.TextCtrl(self, -1, "")
        self.radio_btn_auth_token = wx.RadioButton(self, -1, "Login with previously created OAuth token")
        self.label_oauth = wx.StaticText(self, -1, "OAuth")
        self.text_oauth = wx.TextCtrl(self, -1, "")
        self.button_ok = wx.Button(self, -1, "&OK")
        self.button_cancel = wx.Button(self, -1, "&Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_RADIOBUTTON, self.on_radio_btn_auth_change, self.radio_btn_auth_web)
        self.Bind(wx.EVT_RADIOBUTTON, self.on_radio_btn_auth_change, self.radio_btn_auth_none)
        self.Bind(wx.EVT_RADIOBUTTON, self.on_radio_btn_auth_change, self.radio_btn_auth_token)
        self.Bind(wx.EVT_BUTTON, self.on_button_ok_click, self.button_ok)
        self.Bind(wx.EVT_BUTTON, self.on_button_cancel_click, self.button_cancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: OptionsWindow.__set_properties
        self.SetTitle("Options")
        self.text_poll_interval.SetToolTipString("Time between polls for stream changes")
        self.text_oauth.SetToolTipString("Enter a token to use with Authentication: OAuth header (e.g. from https://twitchapps.com/tmi/)")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: OptionsWindow.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10 = wx.StaticBoxSizer(self.sizer_10_staticbox, wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11.Add(self.label_5, 0, wx.EXPAND, 0)
        sizer_11.Add(self.text_poll_interval, 0, wx.EXPAND, 0)
        sizer_9.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_10.Add(self.radio_btn_auth_web, 0, 0, 0)
        sizer_10.Add(self.radio_btn_auth_none, 0, 0, 0)
        sizer_12.Add(self.label_8, 0, 0, 0)
        sizer_12.Add(self.text_username, 1, 0, 0)
        sizer_10.Add(sizer_12, 0, wx.EXPAND, 0)
        sizer_10.Add(self.radio_btn_auth_token, 0, 0, 0)
        sizer_13.Add(self.label_oauth, 0, 0, 0)
        sizer_13.Add(self.text_oauth, 1, 0, 0)
        sizer_10.Add(sizer_13, 0, wx.EXPAND, 0)
        sizer_4.Add(sizer_10, 0, wx.EXPAND, 0)
        sizer_4.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_14.Add(self.button_ok, 0, wx.EXPAND, 0)
        sizer_14.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_14.Add(self.button_cancel, 0, 0, 0)
        sizer_4.Add(sizer_14, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_4)
        sizer_4.Fit(self)
        self.Layout()
        # end wxGlade

    def on_radio_btn_auth_change(self, event): # wxGlade: OptionsWindow.<event_handler>
        print "Event handler `on_radio_btn_auth_change' not implemented"
        event.Skip()

    def on_button_ok_click(self, event): # wxGlade: OptionsWindow.<event_handler>
        print "Event handler `on_button_ok_click' not implemented"
        event.Skip()

    def on_button_cancel_click(self, event): # wxGlade: OptionsWindow.<event_handler>
        print "Event handler `on_button_cancel_click' not implemented"
        event.Skip()

# end of class OptionsWindow


class MainStatusWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainStatusWindow.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.bitmap_channel_logo = wx.StaticBitmap(self, -1, wx.NullBitmap)
        self.label_6 = wx.StaticText(self, -1, "Channel Description:")
        self.label_head_game = wx.StaticText(self, -1, "Game:")
        self.label_head_up = wx.StaticText(self, -1, "Up:")
        self.label_head_started = wx.StaticText(self, -1, "Started:")
        self.label_channel_status = wx.StaticText(self, -1, "")
        self.label_game = wx.StaticText(self, -1, "")
        self.label_uptime = wx.StaticText(self, -1, "")
        self.label_start_time = wx.StaticText(self, -1, "")
        self.label_1 = wx.StaticText(self, -1, "Online")
        self.list_online = wx.ListBox(self, -1, choices=[])
        self.label_2 = wx.StaticText(self, -1, "Offline")
        self.list_offline = wx.ListBox(self, -1, choices=[])
        self.label_3 = wx.StaticText(self, -1, "Log")
        self.list_log = wx.ListBox(self, -1, choices=[])
        self.button_options = wx.Button(self, -1, "&Options")
        self.button_reload_channels = wx.Button(self, -1, "&Reload Channels")
        self.button_quit = wx.Button(self, -1, "&Quit")
        self.label_status = wx.StaticText(self, -1, "Status")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_LISTBOX_DCLICK, self._on_list_online_dclick, self.list_online)
        self.Bind(wx.EVT_LISTBOX, self._on_list_online_gen, self.list_online)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self._on_list_offline_dclick, self.list_offline)
        self.Bind(wx.EVT_LISTBOX, self._on_list_offline_gen, self.list_offline)
        self.Bind(wx.EVT_BUTTON, self._on_options_button_click, self.button_options)
        self.Bind(wx.EVT_BUTTON, self._on_button_reload_channels_click, self.button_reload_channels)
        self.Bind(wx.EVT_BUTTON, self._on_button_quit, self.button_quit)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainStatusWindow.__set_properties
        self.SetTitle("twitch-notifier")
        self.SetSize((788, 793))
        self.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.bitmap_channel_logo.SetMinSize((128,128))
        self.label_6.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_head_game.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_head_up.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_head_started.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_channel_status.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_game.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_uptime.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.label_start_time.SetBackgroundColour(wx.Colour(240, 240, 240))
        self.list_online.SetToolTipString("Double-Click to open stream page")
        self.list_offline.SetToolTipString("Double-Click to open channel page")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainStatusWindow.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(self.bitmap_channel_logo, 0, wx.EXPAND, 0)
        sizer_3.Add((10, 1), 0, wx.EXPAND, 0)
        sizer_5.Add(self.label_6, 0, wx.EXPAND, 0)
        sizer_5.Add(self.label_head_game, 0, wx.EXPAND, 0)
        sizer_5.Add(self.label_head_up, 0, wx.EXPAND, 0)
        sizer_5.Add(self.label_head_started, 1, wx.EXPAND, 0)
        sizer_3.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_3.Add((10, 1), 0, wx.EXPAND, 0)
        sizer_6.Add(self.label_channel_status, 0, wx.EXPAND, 0)
        sizer_6.Add(self.label_game, 0, wx.EXPAND, 0)
        sizer_6.Add(self.label_uptime, 0, wx.EXPAND, 0)
        sizer_6.Add(self.label_start_time, 1, wx.EXPAND, 0)
        sizer_3.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_1.Add(self.label_1, 0, wx.EXPAND, 0)
        sizer_1.Add(self.list_online, 0, wx.EXPAND, 0)
        sizer_1.Add(self.label_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.list_offline, 1, wx.EXPAND, 0)
        sizer_1.Add(self.label_3, 0, wx.EXPAND, 0)
        sizer_1.Add(self.list_log, 0, wx.EXPAND, 0)
        sizer_2.Add(self.button_options, 0, 0, 0)
        sizer_2.Add(self.button_reload_channels, 0, 0, 0)
        sizer_2.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_2.Add(self.button_quit, 0, 0, 0)
        sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.label_status, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def _on_button_quit(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_button_quit' not implemented"
        event.Skip()

    def _on_list_online_dclick(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_list_online_dclick' not implemented"
        event.Skip()

    def _on_list_offline_dclick(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_list_offline_dclick' not implemented"
        event.Skip()

    def _on_options_button_click(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_options_button_click' not implemented"
        event.Skip()

    def _on_list_online_gen(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_list_online_gen' not implemented"
        event.Skip()

    def _on_list_offline_gen(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_list_offline_gen' not implemented"
        event.Skip()

    def _on_button_refresh_channels_click(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_button_refresh_channels_click' not implemented"
        event.Skip()

    def _on_button_reload_channels_click(self, event): # wxGlade: MainStatusWindow.<event_handler>
        print "Event handler `_on_button_reload_channels_click' not implemented"
        event.Skip()

# end of class MainStatusWindow


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainStatusWindow(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
